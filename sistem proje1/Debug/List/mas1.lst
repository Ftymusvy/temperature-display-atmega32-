
AVRASM ver. 2.1.30  C:\cvavr\BIN\sistem proje1\Debug\List\mas1.asm Wed May 01 19:57:09 2024

                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G102:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G102:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x2000060:
C:\cvavr\BIN\sistem proje1\Debug\List\mas1.asm(1123): warning: .cseg .db misalignment - padding zero byte
000033 0001      	.DB  0x1
                 _0x2000000:
000034 4e2d
000035 4e41
000036 4900
000037 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\cvavr\BIN\sistem proje1\Debug\List\mas1.asm(1126): warning: .cseg .db misalignment - padding zero byte
000038 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000039 0001      	.DW  0x01
00003a 0260      	.DW  __seed_G100
00003b 0066      	.DW  _0x2000060*2
                 
                 _0xFFFFFFFF:
00003c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003d 94f8      	CLI
00003e 27ee      	CLR  R30
00003f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000040 e0f1      	LDI  R31,1
000041 bffb      	OUT  GICR,R31
000042 bfeb      	OUT  GICR,R30
000043 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000044 e08d      	LDI  R24,(14-2)+1
000045 e0a2      	LDI  R26,2
000046 27bb      	CLR  R27
                 __CLEAR_REG:
000047 93ed      	ST   X+,R30
000048 958a      	DEC  R24
000049 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004b e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004d 93ed      	ST   X+,R30
00004e 9701      	SBIW R24,1
00004f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000050 e7e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000051 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000052 9185      	LPM  R24,Z+
000053 9195      	LPM  R25,Z+
000054 9700      	SBIW R24,0
000055 f061      	BREQ __GLOBAL_INI_END
000056 91a5      	LPM  R26,Z+
000057 91b5      	LPM  R27,Z+
000058 9005      	LPM  R0,Z+
000059 9015      	LPM  R1,Z+
00005a 01bf      	MOVW R22,R30
00005b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005c 9005      	LPM  R0,Z+
00005d 920d      	ST   X+,R0
00005e 9701      	SBIW R24,1
00005f f7e1      	BRNE __GLOBAL_INI_LOOP
000060 01fb      	MOVW R30,R22
000061 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000062 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000063 bfed      	OUT  SPL,R30
000064 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000065 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000066 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000067 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000068 940c 0078 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <mega32.h>
                 ;#include <delay.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <stdio.h>
                 ;
                 ;
                 ;
                 ;void adc_configuration(){
                 ; 0000 000A void adc_configuration(){
                 
                 	.CSEG
                 _adc_configuration:
                 ; .FSTART _adc_configuration
                 ; 0000 000B  ADMUX |= (1<<REFS1)|(1<<REFS0);
00006a b1e7      	IN   R30,0x7
00006b 6ce0      	ORI  R30,LOW(0xC0)
00006c b9e7      	OUT  0x7,R30
                 ; 0000 000C  ADCSRA |= (1<<ADPS2)|(1<<ADPS1)|(1<<ADEN);
00006d b1e6      	IN   R30,0x6
00006e 68e6      	ORI  R30,LOW(0x86)
00006f b9e6      	OUT  0x6,R30
                 ; 0000 000D }
000070 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;
                 ;unsigned int temp(){
                 ; 0000 0011 unsigned int temp(){
                 _temp:
                 ; .FSTART _temp
                 ; 0000 0012 ADCSRA |=(1<<ADSC);
000071 9a36      	SBI  0x6,6
                 ; 0000 0013 while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
000072 9b34      	SBIS 0x6,4
000073 cffe      	RJMP _0x3
                 ; 0000 0014 ADCSRA |=(1<<ADIF);
000074 9a34      	SBI  0x6,4
                 ; 0000 0015 return ADCW;
000075 b1e4      	IN   R30,0x4
000076 b1f5      	IN   R31,0x4+1
000077 9508      	RET
                 ; 0000 0016 }
                 ; .FEND
                 ;
                 ;
                 ;
                 ;void main(void)
                 ; 0000 001B {
                 _main:
                 ; .FSTART _main
                 ; 0000 001C char str[10];
                 ; 0000 001D float T;
                 ; 0000 001E DDRA = 0x00 ;
000078 972e      	SBIW R28,14
                 ;	str -> Y+4
                 ;	T -> Y+0
000079 e0e0      	LDI  R30,LOW(0)
00007a bbea      	OUT  0x1A,R30
                 ; 0000 001F PORTA = 0x00 ;
00007b bbeb      	OUT  0x1B,R30
                 ; 0000 0020 UCSRB = 1 <<TXEN;
00007c e0e8      	LDI  R30,LOW(8)
00007d b9ea      	OUT  0xA,R30
                 ; 0000 0021 UCSRC = 0b10000110;
00007e e8e6      	LDI  R30,LOW(134)
00007f bde0      	OUT  0x20,R30
                 ; 0000 0022 UBRRL= 71;
000080 e4e7      	LDI  R30,LOW(71)
000081 b9e9      	OUT  0x9,R30
                 ; 0000 0023 
                 ; 0000 0024 while (1)
                 _0x6:
                 ; 0000 0025     {
                 ; 0000 0026     adc_configuration();
000082 dfe7      	RCALL _adc_configuration
                 ; 0000 0027     T = temp();
000083 dfed      	RCALL _temp
000084 2766      	CLR  R22
000085 2777      	CLR  R23
000086 940e 02a1 	CALL __CDF1
000088 940e 01e9 	CALL SUBOPT_0x0
                 ; 0000 0028     T=(T*256)/1023;
00008a 940e 03f0 	CALL __GETD2S0
                +
00008c e0e0     +LDI R30 , LOW ( 0x43800000 )
00008d e0f0     +LDI R31 , HIGH ( 0x43800000 )
00008e e860     +LDI R22 , BYTE3 ( 0x43800000 )
00008f e473     +LDI R23 , BYTE4 ( 0x43800000 )
                 	__GETD1N 0x43800000
000090 940e 032b 	CALL __MULF12
000092 01df      	MOVW R26,R30
000093 01cb      	MOVW R24,R22
                +
000094 e0e0     +LDI R30 , LOW ( 0x447FC000 )
000095 ecf0     +LDI R31 , HIGH ( 0x447FC000 )
000096 e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
000097 e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
000098 940e 0379 	CALL __DIVF21
00009a 940e 01e9 	CALL SUBOPT_0x0
                 ; 0000 0029     ftoa(T,1,str);
00009c 940e 01ec 	CALL SUBOPT_0x1
00009e 940e 03fa 	CALL __PUTPARD1
0000a0 e0e1      	LDI  R30,LOW(1)
0000a1 93ea      	ST   -Y,R30
0000a2 01de      	MOVW R26,R28
0000a3 9619      	ADIW R26,9
0000a4 940e 00b0 	CALL _ftoa
                 ; 0000 002A     puts(str);
0000a6 01de      	MOVW R26,R28
0000a7 9614      	ADIW R26,4
0000a8 940e 0191 	CALL _puts
                 ; 0000 002B     delay_ms(500);
0000aa efa4      	LDI  R26,LOW(500)
0000ab e0b1      	LDI  R27,HIGH(500)
0000ac 940e 022b 	CALL _delay_ms
                 ; 0000 002C 
                 ; 0000 002D 
                 ; 0000 002E     }
0000ae cfd3      	RJMP _0x6
                 ; 0000 002F }
                 _0x9:
0000af cfff      	RJMP _0x9
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
0000b0 93ba      	ST   -Y,R27
0000b1 93aa      	ST   -Y,R26
0000b2 9724      	SBIW R28,4
0000b3 e0e0      	LDI  R30,LOW(0)
0000b4 83e8      	ST   Y,R30
0000b5 83e9      	STD  Y+1,R30
0000b6 83ea      	STD  Y+2,R30
0000b7 e3ef      	LDI  R30,LOW(63)
0000b8 83eb      	STD  Y+3,R30
0000b9 931a      	ST   -Y,R17
0000ba 930a      	ST   -Y,R16
0000bb 85eb      	LDD  R30,Y+11
0000bc 85fc      	LDD  R31,Y+11+1
0000bd 3fef      	CPI  R30,LOW(0xFFFF)
0000be efaf      	LDI  R26,HIGH(0xFFFF)
0000bf 07fa      	CPC  R31,R26
0000c0 f439      	BRNE _0x200000D
0000c1 940e 01ef 	CALL SUBOPT_0x2
                +
0000c3 e6a8     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
0000c4 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
0000c5 940e 017d 	CALL _strcpyf
0000c7 c0b1      	RJMP _0x20A0003
                 _0x200000D:
0000c8 3fef      	CPI  R30,LOW(0x7FFF)
0000c9 e7af      	LDI  R26,HIGH(0x7FFF)
0000ca 07fa      	CPC  R31,R26
0000cb f439      	BRNE _0x200000C
0000cc 940e 01ef 	CALL SUBOPT_0x2
                +
0000ce e6a9     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
0000cf e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
0000d0 940e 017d 	CALL _strcpyf
0000d2 c0a6      	RJMP _0x20A0003
                 _0x200000C:
0000d3 85ac      	LDD  R26,Y+12
0000d4 23aa      	TST  R26
0000d5 f462      	BRPL _0x200000F
                +
0000d6 85e9     +LDD R30 , Y + 9
0000d7 85fa     +LDD R31 , Y + 9 + 1
0000d8 856b     +LDD R22 , Y + 9 + 2
0000d9 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0000da 940e 0235 	CALL __ANEGF1
0000dc 940e 01f4 	CALL SUBOPT_0x3
0000de 940e 01f9 	CALL SUBOPT_0x4
0000e0 e2ed      	LDI  R30,LOW(45)
0000e1 93ec      	ST   X,R30
                 _0x200000F:
0000e2 85a8      	LDD  R26,Y+8
0000e3 30a7      	CPI  R26,LOW(0x7)
0000e4 f010      	BRLO _0x2000010
0000e5 e0e6      	LDI  R30,LOW(6)
0000e6 87e8      	STD  Y+8,R30
                 _0x2000010:
0000e7 8518      	LDD  R17,Y+8
                 _0x2000011:
0000e8 2fe1      	MOV  R30,R17
0000e9 5011      	SUBI R17,1
0000ea 30e0      	CPI  R30,0
0000eb f039      	BREQ _0x2000013
0000ec 940e 0200 	CALL SUBOPT_0x5
0000ee 940e 0205 	CALL SUBOPT_0x6
0000f0 940e 020c 	CALL SUBOPT_0x7
0000f2 cff5      	RJMP _0x2000011
                 _0x2000013:
0000f3 940e 0211 	CALL SUBOPT_0x8
0000f5 940e 02db 	CALL __ADDF12
0000f7 940e 01f4 	CALL SUBOPT_0x3
0000f9 e010      	LDI  R17,LOW(0)
                +
0000fa e0e0     +LDI R30 , LOW ( 0x3F800000 )
0000fb e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0000fc e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0000fd e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
0000fe 940e 020c 	CALL SUBOPT_0x7
                 _0x2000014:
000100 940e 0211 	CALL SUBOPT_0x8
000102 940e 03be 	CALL __CMPF12
000104 f088      	BRLO _0x2000016
000105 940e 0200 	CALL SUBOPT_0x5
000107 940e 021a 	CALL SUBOPT_0x9
000109 940e 020c 	CALL SUBOPT_0x7
00010b 5f1f      	SUBI R17,-LOW(1)
00010c 3217      	CPI  R17,39
00010d f038      	BRLO _0x2000017
00010e 940e 01ef 	CALL SUBOPT_0x2
                +
000110 e6ad     +LDI R26 , LOW ( 2 * _0x2000000 + ( 5 ) )
000111 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 5 ) )
                 	__POINTW2FN _0x2000000,5
000112 940e 017d 	CALL _strcpyf
000114 c064      	RJMP _0x20A0003
                 _0x2000017:
000115 cfea      	RJMP _0x2000014
                 _0x2000016:
000116 3010      	CPI  R17,0
000117 f429      	BRNE _0x2000018
000118 940e 01f9 	CALL SUBOPT_0x4
00011a e3e0      	LDI  R30,LOW(48)
00011b 93ec      	ST   X,R30
00011c c02f      	RJMP _0x2000019
                 _0x2000018:
                 _0x200001A:
00011d 2fe1      	MOV  R30,R17
00011e 5011      	SUBI R17,1
00011f 30e0      	CPI  R30,0
000120 f159      	BREQ _0x200001C
000121 940e 0200 	CALL SUBOPT_0x5
000123 940e 0205 	CALL SUBOPT_0x6
                +
000125 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000126 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000127 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000128 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000129 940e 02db 	CALL __ADDF12
00012b 01df      	MOVW R26,R30
00012c 01cb      	MOVW R24,R22
00012d 940e 01d5 	CALL _floor
00012f 940e 020c 	CALL SUBOPT_0x7
000131 940e 0211 	CALL SUBOPT_0x8
000133 940e 0379 	CALL __DIVF21
000135 940e 0268 	CALL __CFD1U
000137 2f0e      	MOV  R16,R30
000138 940e 01f9 	CALL SUBOPT_0x4
00013a 2fe0      	MOV  R30,R16
00013b 5de0      	SUBI R30,-LOW(48)
00013c 93ec      	ST   X,R30
00013d 2fe0      	MOV  R30,R16
00013e e0f0      	LDI  R31,0
00013f 940e 0200 	CALL SUBOPT_0x5
000141 940e 03e6 	CALL __CWD1
000143 940e 02a1 	CALL __CDF1
000145 940e 032b 	CALL __MULF12
000147 940e 0221 	CALL SUBOPT_0xA
000149 940e 0226 	CALL SUBOPT_0xB
00014b cfd1      	RJMP _0x200001A
                 _0x200001C:
                 _0x2000019:
00014c 85e8      	LDD  R30,Y+8
00014d 30e0      	CPI  R30,0
00014e f131      	BREQ _0x20A0002
00014f 940e 01f9 	CALL SUBOPT_0x4
000151 e2ee      	LDI  R30,LOW(46)
000152 93ec      	ST   X,R30
                 _0x200001E:
000153 85e8      	LDD  R30,Y+8
000154 50e1      	SUBI R30,LOW(1)
000155 87e8      	STD  Y+8,R30
000156 5fef      	SUBI R30,-LOW(1)
000157 f0e9      	BREQ _0x2000020
000158 940e 0221 	CALL SUBOPT_0xA
00015a 940e 021a 	CALL SUBOPT_0x9
00015c 940e 01f4 	CALL SUBOPT_0x3
                +
00015e 85e9     +LDD R30 , Y + 9
00015f 85fa     +LDD R31 , Y + 9 + 1
000160 856b     +LDD R22 , Y + 9 + 2
000161 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000162 940e 0268 	CALL __CFD1U
000164 2f0e      	MOV  R16,R30
000165 940e 01f9 	CALL SUBOPT_0x4
000167 2fe0      	MOV  R30,R16
000168 5de0      	SUBI R30,-LOW(48)
000169 93ec      	ST   X,R30
00016a 2fe0      	MOV  R30,R16
00016b e0f0      	LDI  R31,0
00016c 940e 0221 	CALL SUBOPT_0xA
00016e 940e 03e6 	CALL __CWD1
000170 940e 02a1 	CALL __CDF1
000172 940e 0226 	CALL SUBOPT_0xB
000174 cfde      	RJMP _0x200001E
                 _0x2000020:
                 _0x20A0002:
000175 81ae      	LDD  R26,Y+6
000176 81bf      	LDD  R27,Y+6+1
000177 e0e0      	LDI  R30,LOW(0)
000178 93ec      	ST   X,R30
                 _0x20A0003:
000179 8119      	LDD  R17,Y+1
00017a 8108      	LDD  R16,Y+0
00017b 962d      	ADIW R28,13
00017c 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
00017d 93ba      	ST   -Y,R27
00017e 93aa      	ST   -Y,R26
00017f 91e9          ld   r30,y+
000180 91f9          ld   r31,y+
000181 91a9          ld   r26,y+
000182 91b9          ld   r27,y+
000183 01cd          movw r24,r26
                 strcpyf0:
000184 9005      	lpm  r0,z+
000185 920d          st   x+,r0
000186 2000          tst  r0
000187 f7e1          brne strcpyf0
000188 01fc          movw r30,r24
000189 9508          ret
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
00018a 93aa      	ST   -Y,R26
                 putchar0:
00018b 9b5d           sbis usr,udre
00018c cffe           rjmp putchar0
00018d 81e8           ld   r30,y
00018e b9ec           out  udr,r30
00018f 9621      	ADIW R28,1
000190 9508      	RET
                 ; .FEND
                 _puts:
                 ; .FSTART _puts
000191 93ba      	ST   -Y,R27
000192 93aa      	ST   -Y,R26
000193 931a      	ST   -Y,R17
                 _0x2040003:
000194 81a9      	LDD  R26,Y+1
000195 81ba      	LDD  R27,Y+1+1
000196 91ed      	LD   R30,X+
000197 83a9      	STD  Y+1,R26
000198 83ba      	STD  Y+1+1,R27
000199 2f1e      	MOV  R17,R30
00019a 30e0      	CPI  R30,0
00019b f019      	BREQ _0x2040005
00019c 2fa1      	MOV  R26,R17
00019d dfec      	RCALL _putchar
00019e cff5      	RJMP _0x2040003
                 _0x2040005:
00019f e0aa      	LDI  R26,LOW(10)
0001a0 dfe9      	RCALL _putchar
0001a1 8118      	LDD  R17,Y+0
0001a2 9623      	ADIW R28,3
0001a3 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
0001a4 940e 03ff 	CALL __PUTPARD2
0001a6 817b         ldd  r23,y+3
0001a7 816a         ldd  r22,y+2
0001a8 81f9         ldd  r31,y+1
0001a9 81e8         ld   r30,y
0001aa fb77         bst  r23,7
0001ab 0f77         lsl  r23
0001ac fd67         sbrc r22,7
0001ad 6071         sbr  r23,1
0001ae 2f97         mov  r25,r23
0001af 579e         subi r25,0x7e
0001b0 f081         breq __ftrunc0
0001b1 f078         brcs __ftrunc0
0001b2 3198         cpi  r25,24
0001b3 f490         brsh __ftrunc1
0001b4 27aa         clr  r26
0001b5 27bb         clr  r27
0001b6 2788         clr  r24
                 __ftrunc2:
0001b7 9408         sec
0001b8 9587         ror  r24
0001b9 95b7         ror  r27
0001ba 95a7         ror  r26
0001bb 959a         dec  r25
0001bc f7d1         brne __ftrunc2
0001bd 23ea         and  r30,r26
0001be 23fb         and  r31,r27
0001bf 2368         and  r22,r24
0001c0 c005         rjmp __ftrunc1
                 __ftrunc0:
0001c1 94e8         clt
0001c2 2777         clr  r23
0001c3 27ee         clr  r30
0001c4 27ff         clr  r31
0001c5 2766         clr  r22
                 __ftrunc1:
0001c6 776f         cbr  r22,0x80
0001c7 9576         lsr  r23
0001c8 f408         brcc __ftrunc3
0001c9 6860         sbr  r22,0x80
                 __ftrunc3:
0001ca f977         bld  r23,7
0001cb 91a9         ld   r26,y+
0001cc 91b9         ld   r27,y+
0001cd 9189         ld   r24,y+
0001ce 9199         ld   r25,y+
0001cf 17ea         cp   r30,r26
0001d0 07fb         cpc  r31,r27
0001d1 0768         cpc  r22,r24
0001d2 0779         cpc  r23,r25
0001d3 fb97         bst  r25,7
0001d4 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0001d5 940e 03ff 	CALL __PUTPARD2
0001d7 940e 03f0 	CALL __GETD2S0
0001d9 940e 01a4 	CALL _ftrunc
0001db d00d      	RCALL SUBOPT_0x0
0001dc f411          brne __floor1
                 __floor0:
0001dd d00e      	RCALL SUBOPT_0x1
0001de c008      	RJMP _0x20A0001
                 __floor1:
0001df f7ee          brtc __floor0
0001e0 d00b      	RCALL SUBOPT_0x1
                +
0001e1 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0001e2 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0001e3 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0001e4 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0001e5 940e 02d4 	CALL __SUBF12
                 _0x20A0001:
0001e7 9624      	ADIW R28,4
0001e8 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 __seed_G100:
000260           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0001e9 940e 03f5 	CALL __PUTD1S0
0001eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
0001ec 940e 03eb 	CALL __GETD1S0
0001ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
0001ef 81ee      	LDD  R30,Y+6
0001f0 81ff      	LDD  R31,Y+6+1
0001f1 93fa      	ST   -Y,R31
0001f2 93ea      	ST   -Y,R30
0001f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
                +
0001f4 87e9     +STD Y + 9 , R30
0001f5 87fa     +STD Y + 9 + 1 , R31
0001f6 876b     +STD Y + 9 + 2 , R22
0001f7 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0001f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x4:
0001f9 81ae      	LDD  R26,Y+6
0001fa 81bf      	LDD  R27,Y+6+1
0001fb 9611      	ADIW R26,1
0001fc 83ae      	STD  Y+6,R26
0001fd 83bf      	STD  Y+6+1,R27
0001fe 9711      	SBIW R26,1
0001ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
                +
000200 81aa     +LDD R26 , Y + 2
000201 81bb     +LDD R27 , Y + 2 + 1
000202 818c     +LDD R24 , Y + 2 + 2
000203 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000204 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
                +
000205 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000206 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000207 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000208 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000209 940e 032b 	CALL __MULF12
00020b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
                +
00020c 83ea     +STD Y + 2 , R30
00020d 83fb     +STD Y + 2 + 1 , R31
00020e 836c     +STD Y + 2 + 2 , R22
00020f 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000210 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x8:
                +
000211 81ea     +LDD R30 , Y + 2
000212 81fb     +LDD R31 , Y + 2 + 1
000213 816c     +LDD R22 , Y + 2 + 2
000214 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000215 85a9     +LDD R26 , Y + 9
000216 85ba     +LDD R27 , Y + 9 + 1
000217 858b     +LDD R24 , Y + 9 + 2
000218 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000219 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
                +
00021a e0e0     +LDI R30 , LOW ( 0x41200000 )
00021b e0f0     +LDI R31 , HIGH ( 0x41200000 )
00021c e260     +LDI R22 , BYTE3 ( 0x41200000 )
00021d e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00021e 940e 032b 	CALL __MULF12
000220 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
                +
000221 85a9     +LDD R26 , Y + 9
000222 85ba     +LDD R27 , Y + 9 + 1
000223 858b     +LDD R24 , Y + 9 + 2
000224 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000225 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
000226 940e 0404 	CALL __SWAPD12
000228 940e 02d4 	CALL __SUBF12
00022a cfc9      	RJMP SUBOPT_0x3
                 
                 
                 	.CSEG
                 _delay_ms:
00022b 9610      	adiw r26,0
00022c f039      	breq __delay_ms1
                 __delay_ms0:
00022d 95a8      	wdr
                +
00022e ed80     +LDI R24 , LOW ( 0x7D0 )
00022f e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000230 9701     +SBIW R24 , 1
000231 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000232 9711      	sbiw r26,1
000233 f7c9      	brne __delay_ms0
                 __delay_ms1:
000234 9508      	ret
                 
                 __ANEGF1:
000235 9730      	SBIW R30,0
000236 4060      	SBCI R22,0
000237 4070      	SBCI R23,0
000238 f009      	BREQ __ANEGF10
000239 5870      	SUBI R23,0x80
                 __ANEGF10:
00023a 9508      	RET
                 
                 __ROUND_REPACK:
00023b 2355      	TST  R21
00023c f442      	BRPL __REPACK
00023d 3850      	CPI  R21,0x80
00023e f411      	BRNE __ROUND_REPACK0
00023f ffe0      	SBRS R30,0
000240 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000241 9631      	ADIW R30,1
000242 1f69      	ADC  R22,R25
000243 1f79      	ADC  R23,R25
000244 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000245 e850      	LDI  R21,0x80
000246 2757      	EOR  R21,R23
000247 f411      	BRNE __REPACK0
000248 935f      	PUSH R21
000249 c0cf      	RJMP __ZERORES
                 __REPACK0:
00024a 3f5f      	CPI  R21,0xFF
00024b f031      	BREQ __REPACK1
00024c 0f66      	LSL  R22
00024d 0c00      	LSL  R0
00024e 9557      	ROR  R21
00024f 9567      	ROR  R22
000250 2f75      	MOV  R23,R21
000251 9508      	RET
                 __REPACK1:
000252 935f      	PUSH R21
000253 2000      	TST  R0
000254 f00a      	BRMI __REPACK2
000255 c0cf      	RJMP __MAXRES
                 __REPACK2:
000256 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000257 e850      	LDI  R21,0x80
000258 2e19      	MOV  R1,R25
000259 2215      	AND  R1,R21
00025a 0f88      	LSL  R24
00025b 1f99      	ROL  R25
00025c 2795      	EOR  R25,R21
00025d 0f55      	LSL  R21
00025e 9587      	ROR  R24
                 
                 __UNPACK1:
00025f e850      	LDI  R21,0x80
000260 2e07      	MOV  R0,R23
000261 2205      	AND  R0,R21
000262 0f66      	LSL  R22
000263 1f77      	ROL  R23
000264 2775      	EOR  R23,R21
000265 0f55      	LSL  R21
000266 9567      	ROR  R22
000267 9508      	RET
                 
                 __CFD1U:
000268 9468      	SET
000269 c001      	RJMP __CFD1U0
                 __CFD1:
00026a 94e8      	CLT
                 __CFD1U0:
00026b 935f      	PUSH R21
00026c dff2      	RCALL __UNPACK1
00026d 3870      	CPI  R23,0x80
00026e f018      	BRLO __CFD10
00026f 3f7f      	CPI  R23,0xFF
000270 f408      	BRCC __CFD10
000271 c0a7      	RJMP __ZERORES
                 __CFD10:
000272 e156      	LDI  R21,22
000273 1b57      	SUB  R21,R23
000274 f4aa      	BRPL __CFD11
000275 9551      	NEG  R21
000276 3058      	CPI  R21,8
000277 f40e      	BRTC __CFD19
000278 3059      	CPI  R21,9
                 __CFD19:
000279 f030      	BRLO __CFD17
00027a efef      	SER  R30
00027b efff      	SER  R31
00027c ef6f      	SER  R22
00027d e77f      	LDI  R23,0x7F
00027e f977      	BLD  R23,7
00027f c01a      	RJMP __CFD15
                 __CFD17:
000280 2777      	CLR  R23
000281 2355      	TST  R21
000282 f0b9      	BREQ __CFD15
                 __CFD18:
000283 0fee      	LSL  R30
000284 1fff      	ROL  R31
000285 1f66      	ROL  R22
000286 1f77      	ROL  R23
000287 955a      	DEC  R21
000288 f7d1      	BRNE __CFD18
000289 c010      	RJMP __CFD15
                 __CFD11:
00028a 2777      	CLR  R23
                 __CFD12:
00028b 3058      	CPI  R21,8
00028c f028      	BRLO __CFD13
00028d 2fef      	MOV  R30,R31
00028e 2ff6      	MOV  R31,R22
00028f 2f67      	MOV  R22,R23
000290 5058      	SUBI R21,8
000291 cff9      	RJMP __CFD12
                 __CFD13:
000292 2355      	TST  R21
000293 f031      	BREQ __CFD15
                 __CFD14:
000294 9576      	LSR  R23
000295 9567      	ROR  R22
000296 95f7      	ROR  R31
000297 95e7      	ROR  R30
000298 955a      	DEC  R21
000299 f7d1      	BRNE __CFD14
                 __CFD15:
00029a 2000      	TST  R0
00029b f40a      	BRPL __CFD16
00029c d141      	RCALL __ANEGD1
                 __CFD16:
00029d 915f      	POP  R21
00029e 9508      	RET
                 
                 __CDF1U:
00029f 9468      	SET
0002a0 c001      	RJMP __CDF1U0
                 __CDF1:
0002a1 94e8      	CLT
                 __CDF1U0:
0002a2 9730      	SBIW R30,0
0002a3 4060      	SBCI R22,0
0002a4 4070      	SBCI R23,0
0002a5 f0b1      	BREQ __CDF10
0002a6 2400      	CLR  R0
0002a7 f026      	BRTS __CDF11
0002a8 2377      	TST  R23
0002a9 f412      	BRPL __CDF11
0002aa 9400      	COM  R0
0002ab d132      	RCALL __ANEGD1
                 __CDF11:
0002ac 2e17      	MOV  R1,R23
0002ad e17e      	LDI  R23,30
0002ae 2011      	TST  R1
                 __CDF12:
0002af f032      	BRMI __CDF13
0002b0 957a      	DEC  R23
0002b1 0fee      	LSL  R30
0002b2 1fff      	ROL  R31
0002b3 1f66      	ROL  R22
0002b4 1c11      	ROL  R1
0002b5 cff9      	RJMP __CDF12
                 __CDF13:
0002b6 2fef      	MOV  R30,R31
0002b7 2ff6      	MOV  R31,R22
0002b8 2d61      	MOV  R22,R1
0002b9 935f      	PUSH R21
0002ba df8a      	RCALL __REPACK
0002bb 915f      	POP  R21
                 __CDF10:
0002bc 9508      	RET
                 
                 __SWAPACC:
0002bd 934f      	PUSH R20
0002be 01af      	MOVW R20,R30
0002bf 01fd      	MOVW R30,R26
0002c0 01da      	MOVW R26,R20
0002c1 01ab      	MOVW R20,R22
0002c2 01bc      	MOVW R22,R24
0002c3 01ca      	MOVW R24,R20
0002c4 2d40      	MOV  R20,R0
0002c5 2c01      	MOV  R0,R1
0002c6 2e14      	MOV  R1,R20
0002c7 914f      	POP  R20
0002c8 9508      	RET
                 
                 __UADD12:
0002c9 0fea      	ADD  R30,R26
0002ca 1ffb      	ADC  R31,R27
0002cb 1f68      	ADC  R22,R24
0002cc 9508      	RET
                 
                 __NEGMAN1:
0002cd 95e0      	COM  R30
0002ce 95f0      	COM  R31
0002cf 9560      	COM  R22
0002d0 5fef      	SUBI R30,-1
0002d1 4fff      	SBCI R31,-1
0002d2 4f6f      	SBCI R22,-1
0002d3 9508      	RET
                 
                 __SUBF12:
0002d4 935f      	PUSH R21
0002d5 df81      	RCALL __UNPACK
0002d6 3890      	CPI  R25,0x80
0002d7 f171      	BREQ __ADDF129
0002d8 e850      	LDI  R21,0x80
0002d9 2615      	EOR  R1,R21
                 
0002da c004      	RJMP __ADDF120
                 
                 __ADDF12:
0002db 935f      	PUSH R21
0002dc df7a      	RCALL __UNPACK
0002dd 3890      	CPI  R25,0x80
0002de f139      	BREQ __ADDF129
                 
                 __ADDF120:
0002df 3870      	CPI  R23,0x80
0002e0 f121      	BREQ __ADDF128
                 __ADDF121:
0002e1 2f57      	MOV  R21,R23
0002e2 1b59      	SUB  R21,R25
0002e3 f12b      	BRVS __ADDF1211
0002e4 f412      	BRPL __ADDF122
0002e5 dfd7      	RCALL __SWAPACC
0002e6 cffa      	RJMP __ADDF121
                 __ADDF122:
0002e7 3158      	CPI  R21,24
0002e8 f018      	BRLO __ADDF123
0002e9 27aa      	CLR  R26
0002ea 27bb      	CLR  R27
0002eb 2788      	CLR  R24
                 __ADDF123:
0002ec 3058      	CPI  R21,8
0002ed f028      	BRLO __ADDF124
0002ee 2fab      	MOV  R26,R27
0002ef 2fb8      	MOV  R27,R24
0002f0 2788      	CLR  R24
0002f1 5058      	SUBI R21,8
0002f2 cff9      	RJMP __ADDF123
                 __ADDF124:
0002f3 2355      	TST  R21
0002f4 f029      	BREQ __ADDF126
                 __ADDF125:
0002f5 9586      	LSR  R24
0002f6 95b7      	ROR  R27
0002f7 95a7      	ROR  R26
0002f8 955a      	DEC  R21
0002f9 f7d9      	BRNE __ADDF125
                 __ADDF126:
0002fa 2d50      	MOV  R21,R0
0002fb 2551      	EOR  R21,R1
0002fc f072      	BRMI __ADDF127
0002fd dfcb      	RCALL __UADD12
0002fe f438      	BRCC __ADDF129
0002ff 9567      	ROR  R22
000300 95f7      	ROR  R31
000301 95e7      	ROR  R30
000302 9573      	INC  R23
000303 f413      	BRVC __ADDF129
000304 c020      	RJMP __MAXRES
                 __ADDF128:
000305 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000306 df3e      	RCALL __REPACK
000307 915f      	POP  R21
000308 9508      	RET
                 __ADDF1211:
000309 f7d8      	BRCC __ADDF128
00030a cffb      	RJMP __ADDF129
                 __ADDF127:
00030b 1bea      	SUB  R30,R26
00030c 0bfb      	SBC  R31,R27
00030d 0b68      	SBC  R22,R24
00030e f051      	BREQ __ZERORES
00030f f410      	BRCC __ADDF1210
000310 9400      	COM  R0
000311 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000312 2366      	TST  R22
000313 f392      	BRMI __ADDF129
000314 0fee      	LSL  R30
000315 1fff      	ROL  R31
000316 1f66      	ROL  R22
000317 957a      	DEC  R23
000318 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000319 27ee      	CLR  R30
00031a 27ff      	CLR  R31
00031b 2766      	CLR  R22
00031c 2777      	CLR  R23
00031d 915f      	POP  R21
00031e 9508      	RET
                 
                 __MINRES:
00031f efef      	SER  R30
000320 efff      	SER  R31
000321 e76f      	LDI  R22,0x7F
000322 ef7f      	SER  R23
000323 915f      	POP  R21
000324 9508      	RET
                 
                 __MAXRES:
000325 efef      	SER  R30
000326 efff      	SER  R31
000327 e76f      	LDI  R22,0x7F
000328 e77f      	LDI  R23,0x7F
000329 915f      	POP  R21
00032a 9508      	RET
                 
                 __MULF12:
00032b 935f      	PUSH R21
00032c df2a      	RCALL __UNPACK
00032d 3870      	CPI  R23,0x80
00032e f351      	BREQ __ZERORES
00032f 3890      	CPI  R25,0x80
000330 f341      	BREQ __ZERORES
000331 2401      	EOR  R0,R1
000332 9408      	SEC
000333 1f79      	ADC  R23,R25
000334 f423      	BRVC __MULF124
000335 f31c      	BRLT __ZERORES
                 __MULF125:
000336 2000      	TST  R0
000337 f33a      	BRMI __MINRES
000338 cfec      	RJMP __MAXRES
                 __MULF124:
000339 920f      	PUSH R0
00033a 931f      	PUSH R17
00033b 932f      	PUSH R18
00033c 933f      	PUSH R19
00033d 934f      	PUSH R20
00033e 2711      	CLR  R17
00033f 2722      	CLR  R18
000340 2799      	CLR  R25
000341 9f68      	MUL  R22,R24
000342 01a0      	MOVW R20,R0
000343 9f8f      	MUL  R24,R31
000344 2d30      	MOV  R19,R0
000345 0d41      	ADD  R20,R1
000346 1f59      	ADC  R21,R25
000347 9f6b      	MUL  R22,R27
000348 0d30      	ADD  R19,R0
000349 1d41      	ADC  R20,R1
00034a 1f59      	ADC  R21,R25
00034b 9f8e      	MUL  R24,R30
00034c d027      	RCALL __MULF126
00034d 9fbf      	MUL  R27,R31
00034e d025      	RCALL __MULF126
00034f 9f6a      	MUL  R22,R26
000350 d023      	RCALL __MULF126
000351 9fbe      	MUL  R27,R30
000352 d01d      	RCALL __MULF127
000353 9faf      	MUL  R26,R31
000354 d01b      	RCALL __MULF127
000355 9fae      	MUL  R26,R30
000356 0d11      	ADD  R17,R1
000357 1f29      	ADC  R18,R25
000358 1f39      	ADC  R19,R25
000359 1f49      	ADC  R20,R25
00035a 1f59      	ADC  R21,R25
00035b 2fe3      	MOV  R30,R19
00035c 2ff4      	MOV  R31,R20
00035d 2f65      	MOV  R22,R21
00035e 2f52      	MOV  R21,R18
00035f 914f      	POP  R20
000360 913f      	POP  R19
000361 912f      	POP  R18
000362 911f      	POP  R17
000363 900f      	POP  R0
000364 2366      	TST  R22
000365 f02a      	BRMI __MULF122
000366 0f55      	LSL  R21
000367 1fee      	ROL  R30
000368 1fff      	ROL  R31
000369 1f66      	ROL  R22
00036a c002      	RJMP __MULF123
                 __MULF122:
00036b 9573      	INC  R23
00036c f24b      	BRVS __MULF125
                 __MULF123:
00036d decd      	RCALL __ROUND_REPACK
00036e 915f      	POP  R21
00036f 9508      	RET
                 
                 __MULF127:
000370 0d10      	ADD  R17,R0
000371 1d21      	ADC  R18,R1
000372 1f39      	ADC  R19,R25
000373 c002      	RJMP __MULF128
                 __MULF126:
000374 0d20      	ADD  R18,R0
000375 1d31      	ADC  R19,R1
                 __MULF128:
000376 1f49      	ADC  R20,R25
000377 1f59      	ADC  R21,R25
000378 9508      	RET
                 
                 __DIVF21:
000379 935f      	PUSH R21
00037a dedc      	RCALL __UNPACK
00037b 3870      	CPI  R23,0x80
00037c f421      	BRNE __DIVF210
00037d 2011      	TST  R1
                 __DIVF211:
00037e f40a      	BRPL __DIVF219
00037f cf9f      	RJMP __MINRES
                 __DIVF219:
000380 cfa4      	RJMP __MAXRES
                 __DIVF210:
000381 3890      	CPI  R25,0x80
000382 f409      	BRNE __DIVF218
                 __DIVF217:
000383 cf95      	RJMP __ZERORES
                 __DIVF218:
000384 2401      	EOR  R0,R1
000385 9408      	SEC
000386 0b97      	SBC  R25,R23
000387 f41b      	BRVC __DIVF216
000388 f3d4      	BRLT __DIVF217
000389 2000      	TST  R0
00038a cff3      	RJMP __DIVF211
                 __DIVF216:
00038b 2f79      	MOV  R23,R25
00038c 931f      	PUSH R17
00038d 932f      	PUSH R18
00038e 933f      	PUSH R19
00038f 934f      	PUSH R20
000390 2411      	CLR  R1
000391 2711      	CLR  R17
000392 2722      	CLR  R18
000393 2733      	CLR  R19
000394 2744      	CLR  R20
000395 2755      	CLR  R21
000396 e290      	LDI  R25,32
                 __DIVF212:
000397 17ae      	CP   R26,R30
000398 07bf      	CPC  R27,R31
000399 0786      	CPC  R24,R22
00039a 0741      	CPC  R20,R17
00039b f030      	BRLO __DIVF213
00039c 1bae      	SUB  R26,R30
00039d 0bbf      	SBC  R27,R31
00039e 0b86      	SBC  R24,R22
00039f 0b41      	SBC  R20,R17
0003a0 9408      	SEC
0003a1 c001      	RJMP __DIVF214
                 __DIVF213:
0003a2 9488      	CLC
                 __DIVF214:
0003a3 1f55      	ROL  R21
0003a4 1f22      	ROL  R18
0003a5 1f33      	ROL  R19
0003a6 1c11      	ROL  R1
0003a7 1faa      	ROL  R26
0003a8 1fbb      	ROL  R27
0003a9 1f88      	ROL  R24
0003aa 1f44      	ROL  R20
0003ab 959a      	DEC  R25
0003ac f751      	BRNE __DIVF212
0003ad 01f9      	MOVW R30,R18
0003ae 2d61      	MOV  R22,R1
0003af 914f      	POP  R20
0003b0 913f      	POP  R19
0003b1 912f      	POP  R18
0003b2 911f      	POP  R17
0003b3 2366      	TST  R22
0003b4 f032      	BRMI __DIVF215
0003b5 0f55      	LSL  R21
0003b6 1fee      	ROL  R30
0003b7 1fff      	ROL  R31
0003b8 1f66      	ROL  R22
0003b9 957a      	DEC  R23
0003ba f243      	BRVS __DIVF217
                 __DIVF215:
0003bb de7f      	RCALL __ROUND_REPACK
0003bc 915f      	POP  R21
0003bd 9508      	RET
                 
                 __CMPF12:
0003be 2399      	TST  R25
0003bf f09a      	BRMI __CMPF120
0003c0 2377      	TST  R23
0003c1 f042      	BRMI __CMPF121
0003c2 1797      	CP   R25,R23
0003c3 f048      	BRLO __CMPF122
0003c4 f429      	BRNE __CMPF121
0003c5 17ae      	CP   R26,R30
0003c6 07bf      	CPC  R27,R31
0003c7 0786      	CPC  R24,R22
0003c8 f020      	BRLO __CMPF122
0003c9 f031      	BREQ __CMPF123
                 __CMPF121:
0003ca 9498      	CLZ
0003cb 9488      	CLC
0003cc 9508      	RET
                 __CMPF122:
0003cd 9498      	CLZ
0003ce 9408      	SEC
0003cf 9508      	RET
                 __CMPF123:
0003d0 9418      	SEZ
0003d1 9488      	CLC
0003d2 9508      	RET
                 __CMPF120:
0003d3 2377      	TST  R23
0003d4 f7c2      	BRPL __CMPF122
0003d5 1797      	CP   R25,R23
0003d6 f398      	BRLO __CMPF121
0003d7 f7a9      	BRNE __CMPF122
0003d8 17ea      	CP   R30,R26
0003d9 07fb      	CPC  R31,R27
0003da 0768      	CPC  R22,R24
0003db f388      	BRLO __CMPF122
0003dc f399      	BREQ __CMPF123
0003dd cfec      	RJMP __CMPF121
                 
                 __ANEGD1:
0003de 95f0      	COM  R31
0003df 9560      	COM  R22
0003e0 9570      	COM  R23
0003e1 95e1      	NEG  R30
0003e2 4fff      	SBCI R31,-1
0003e3 4f6f      	SBCI R22,-1
0003e4 4f7f      	SBCI R23,-1
0003e5 9508      	RET
                 
                 __CWD1:
0003e6 2f6f      	MOV  R22,R31
0003e7 0f66      	ADD  R22,R22
0003e8 0b66      	SBC  R22,R22
0003e9 2f76      	MOV  R23,R22
0003ea 9508      	RET
                 
                 __GETD1S0:
0003eb 81e8      	LD   R30,Y
0003ec 81f9      	LDD  R31,Y+1
0003ed 816a      	LDD  R22,Y+2
0003ee 817b      	LDD  R23,Y+3
0003ef 9508      	RET
                 
                 __GETD2S0:
0003f0 81a8      	LD   R26,Y
0003f1 81b9      	LDD  R27,Y+1
0003f2 818a      	LDD  R24,Y+2
0003f3 819b      	LDD  R25,Y+3
0003f4 9508      	RET
                 
                 __PUTD1S0:
0003f5 83e8      	ST   Y,R30
0003f6 83f9      	STD  Y+1,R31
0003f7 836a      	STD  Y+2,R22
0003f8 837b      	STD  Y+3,R23
0003f9 9508      	RET
                 
                 __PUTPARD1:
0003fa 937a      	ST   -Y,R23
0003fb 936a      	ST   -Y,R22
0003fc 93fa      	ST   -Y,R31
0003fd 93ea      	ST   -Y,R30
0003fe 9508      	RET
                 
                 __PUTPARD2:
0003ff 939a      	ST   -Y,R25
000400 938a      	ST   -Y,R24
000401 93ba      	ST   -Y,R27
000402 93aa      	ST   -Y,R26
000403 9508      	RET
                 
                 __SWAPD12:
000404 2e18      	MOV  R1,R24
000405 2f86      	MOV  R24,R22
000406 2d61      	MOV  R22,R1
000407 2e19      	MOV  R1,R25
000408 2f97      	MOV  R25,R23
000409 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00040a 2e1b      	MOV  R1,R27
00040b 2fbf      	MOV  R27,R31
00040c 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00040d 2e1a      	MOV  R1,R26
00040e 2fae      	MOV  R26,R30
00040f 2de1      	MOV  R30,R1
000410 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  29 r1 :  30 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   8 r17:  25 r18:  12 r19:  12 r20:  22 r21:  63 r22:  75 r23:  69 
r24:  45 r25:  47 r26:  67 r27:  43 r28:   9 r29:   1 r30: 134 r31:  61 
x  :  11 y  : 106 z  :   8 
Registers used: 21 out of 35 (60.0%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :   7 
adiw  :   9 and   :   5 andi  :   0 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   5 brcs  :   1 break :   0 breq  :  22 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  13 
brlt  :   2 brmi  :   9 brne  :  21 brpl  :   8 brsh  :   1 brtc  :   2 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   2 call  :  69 
cbi   :   0 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  31 cls   :   0 clt   :   3 clv   :   0 clz   :   2 com   :   8 
cp    :   6 cpc   :  12 cpi   :  26 cpse  :   0 dec   :   9 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   4 inc   :   2 jmp   :  22 ld    :  13 ldd   :  51 ldi   :  79 
lds   :   0 lpm   :   8 lsl   :  12 lsr   :   3 mov   :  49 movw  :  19 
mul   :   9 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   2 out   :  14 pop   :  18 push  :  18 rcall :  27 ret   :  46 
reti  :   0 rjmp  :  42 rol   :  24 ror   :  15 sbc   :   7 sbci  :   9 
sbi   :   2 sbic  :   0 sbis  :   2 sbiw  :  10 sbr   :   2 sbrc  :   1 
sbrs  :   1 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   2 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  33 std   :  20 sts   :   0 sub   :   4 subi  :  12 swap  :   0 
tst   :  19 wdr   :   1 
Instructions used: 72 out of 116 (62.1%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000822   2044     38   2082   32768   6.4%
[.dseg] 0x000060 0x000264      0      4      4    2048   0.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 2 warnings
